package com.example.demo;
/*
*This class represents a Customer table in the database.
It has three attributes: id, firstName, and lastName.
It uses JPA annotations to define database mapping.jakarta persistence api is used for database interaction
It provides getter methods for accessing fields.
It includes a constructor for creating objects.
It overrides toString() for string representation
*/
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

@Entity
public class Customer {

  @Id//marks id as primary key of the table
  @GeneratedValue(strategy=GenerationType.AUTO)//id value should be automatically generated by the database
  private Long id;
  private String firstName;
  private String lastName;
  public Long getId() {
	    return id;
	  }

	  public String getFirstName() {
	    return firstName;
	  }

	  public String getLastName() {
	    return lastName;
	  }
//protected no-arg constructor is required by jpa for entity instantiation
  protected Customer() {}
  //parameterized constructor to initialize a Customer object with firstName and lastName.
  public Customer(String firstName, String lastName) {
    this.firstName = firstName;
    this.lastName = lastName;
  }

  @Override
  public String toString() {
    return String.format(
        "Customer[id=%d, firstName='%s', lastName='%s']",
        id, firstName, lastName);
  }
}
